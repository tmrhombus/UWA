#!/bin/sh

# just to get rid of annoying output from pushing/popping
pushd () { 
 command pushd "$@" > /dev/null 
}
popd () {
 command popd "$@" > /dev/null
}

runname="Dupider" #=$version

base_in_dir=root://cmsxrootd.hep.wisc.edu//store/user/tperry/
base_submit_dir=/nfs_scratch/tperry/$version/$runname/

samplename=DataD_Ele
lepton=Ele
 
psdir=""
# copy file list generated by countEvents.sh
cp '../data/'"$version"'/list_'"$samplename"'.txt' \
   '../data/'"$version"'/ez_list_'"$samplename"'.txt'
mylist='../data/'"$version"'/ez_list_'"$samplename"'.txt'
#mylist="../data/${version}/Test_ez_list_${samplename}.txt"

# relevant parameters for this sample
if   [[ "$samplename" == "DataA_Mu" ]]
then
 psdir[0]="${version}_DataA_8TeVMu-Mu-PATData/"
elif [[ "$samplename" == "DataB_Mu" ]]
then
 psdir[0]="${version}_DataB_8TeVMu-Mu-PATData/"
elif [[ "$samplename" == "DataC_Mu" ]]
then
 psdir[0]="${version}_DataC_8TeVMu-Mu-PATData/"
elif [[ "$samplename" == "DataD_Mu" ]]
then
 psdir[0]="${version}_DataD_8TeVMu-Mu-PATData/"

elif [[ "$samplename" == "DataA_Ele" ]]
then
 psdir[0]="${version}_DataA_8TeVEle-Ele-PATData/"
elif [[ "$samplename" == "DataB_Ele" ]]
then
 psdir[0]="${version}_DataB_8TeVEle-Ele-PATData/"
elif [[ "$samplename" == "DataC_Ele" ]]
then
 psdir[0]="${version}_DataC_8TeVEle-Ele-PATData/"
elif [[ "$samplename" == "DataD_Ele" ]]
then
 psdir[0]="${version}_DataD_8TeVEle-Ele-PATData/"
fi

# where am I
echo $samplename
for psdir in "${psdir[@]}"
do
 echo " "$psdir
 echo " "
 
 # cut path, .root from file list
 sed -i 's/^.*\(\/Mu-PATData-patTuple\)/Mu-PATData-patTuple/g' $mylist
 sed -i 's/^.*\(\/Ele-PATData-skimpattuple\)/Ele-PATData-skimpattuple/g' $mylist
 sed -i 's/.root//g' $mylist

 # for each file from list... submit
 while read filename
 do

  inputFileName=$base_in_dir$psdir$filename".root"
  submit_dir=$base_submit_dir$samplename"/"$filename

  # callHistoFiller.cc
  # activate correct file, nrEvents, crosssec ... in callHistoFiller.cc
  cp template_data_callHistoFiller.cc  "${samplename}_callHistoFiller.cc"
  sed -i 's@SAMPLE@'"$samplename"'@g'  "${samplename}_callHistoFiller.cc"
  sed -i "s@FULLFILE@$inputFileName@g" "${samplename}_callHistoFiller.cc"
  sed -i "s@FILENAME@$filename@g"      "${samplename}_callHistoFiller.cc"
  if [[ "${lepton}" == "Mu" ]]
  then
  sed -i "s@TREENAME@muonEventTree/eventTree@g"     "${samplename}_callHistoFiller.cc"
  elif [[ "${lepton}" == "Ele" ]]
  then
  sed -i "s@TREENAME@electronEventTree/eventTree@g" "${samplename}_callHistoFiller.cc"
  fi
   
  # runHistoFiller.sh (executable)
  touch "$samplename"'_runHistoFiller.sh'
  chmod a+x "$samplename"'_runHistoFiller.sh'
  cat >>"$samplename"'_runHistoFiller.sh' <<EOF
#!/bin/sh
EOF
  # add running _callHistoFiller.cc to _runHistoFiller.sh
  cat >>"${samplename}_runHistoFiller.sh" <<EOF
root -l -b -q ${samplename}_callHistoFiller.cc
EOF


  # runCondor.sh
  cp template_runCondor.sh $samplename"_runCondor.sh"
  # add _callHistoFiller.cc to files passed to condor node
  sed -i "s@transfer_input_files =@transfer_input_files = ${submit_dir}/${samplename}_callHistoFiller.cc,@g" \
   $samplename'_runCondor.sh'
  # for locating executable (runHistoFiller.sh)
  sed -i "s@SUBMITDIR@${submit_dir}@g" "${samplename}_runCondor.sh"
  sed -i "s@PSNAME@${samplename}@g"    "${samplename}_runCondor.sh"
 
  # move everything to $submit_dir
  mkdir -p $submit_dir 
  mv "${samplename}_callHistoFiller.cc" $submit_dir
  mv "${samplename}_runHistoFiller.sh"  $submit_dir
  mv "${samplename}_runCondor.sh"       $submit_dir
  
  # go there and submit
  pushd $submit_dir
  source "$samplename"'_runCondor.sh'
  condor_submit submit > submit.log
  popd
 
  done < $mylist #filename
 done #psdir
